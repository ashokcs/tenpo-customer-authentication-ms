stages:
  - test
  - build
  - docker
  - deploy

variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

test:
  stage: test
  image: java:8-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .m2/repository/
      - target/*.jar
  before_script:
    - chmod +x mvnw
  script:
    - ./mvnw $MAVEN_CLI_OPTS $MAVEN_OPTS clean test -Dmaven.test.skip=false -Djacoco-skip=false

build:
  stage: build
  image: java:8-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .m2/repository/
      - target/*.jar
  before_script:
    - chmod +x mvnw
  script:
    - ./mvnw $MAVEN_CLI_OPTS $MAVEN_OPTS clean package -Dmaven.test.skip=true -Djacoco-skip=true
  only:
    - develop
    - uat
    - master

.docker-build:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - target/*.jar
  variables:
    DOCKER_FILE: Dockerfile
  before_script:
    - cat $POSTGRES_CRT > postgres.crt
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/$DOCKER_FILE --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

docker:
  extends: .docker-build
  only:
    - develop
    - uat

docker_prod:
  extends: .docker-build
  variables:
    DOCKER_FILE: Dockerfile.prod
  only:
    - master

dev_kiuwan_analysis:
  stage: build
  image: registry.gitlab.com/tenpo/devsecops/security/kiuwan-agent:latest
  variables:
    KIUWAN_USER: $KIUWAN_USER #Kiuwan user name (globally scoped)
    KIUWAN_PASSWORD: $KIUWAN_PASSWORD #Kiuwan password (globally scoped)
    PROJECT_NAME: $CI_PROJECT_NAME #Current project name (automatically initialized by Gitlab CI)
    TARGET_DIR: $CI_PROJECT_DIR #Current working directory (automatically initialized by Gitlab CI)
    BUILD_ID: $CI_JOB_ID #Current project job ID (automatically initialized by Gitlab CI)
  script:
    - baseline
  only:
    - develop

dev_deployment:
  stage: deploy
  image: registry.gitlab.com/krealomine/deploy_k8s_azure:latest
  environment:
    name: dev
  variables:
    SPRING_PROFILES_ACTIVE: cloud,dev
    REGISTRY: customer-authentication
    IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    NAMESPACE: tenpo-webpay
  script:
    - kubectl apply -f customer-authentication-namespace.yaml
    - sed -i "s|_SPRING_PROFILES_ACTIVE_|$SPRING_PROFILES_ACTIVE|g" customer-authentication-deployment.yaml
    - sed -i "s|_IMAGE_|$IMAGE|g" customer-authentication-deployment.yaml
    - >
      kubectl create secret docker-registry $REGISTRY \
        --namespace=$NAMESPACE \
        --dry-run=true \
        --docker-server=$CI_REGISTRY \
        --docker-username=$CI_DEPLOY_USER \
        --docker-password=$CI_DEPLOY_PASSWORD \
        --docker-email=$GITLAB_USER_EMAIL -o yaml | kubectl apply -f -
    - kubectl apply -f customer-authentication-deployment.yaml
    - kubectl apply -f customer-authentication-service-dev.yaml
  only:
    - develop

uat_deploy:
  stage: deploy
  image: registry.gitlab.com/krealomine/deploy_k8s_azure_uat:latest
  environment:
    name: uat
  variables:
    SPRING_PROFILES_ACTIVE: cloud,uat
    REGISTRY: customer-authentication
    IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    NAMESPACE: tenpo-webpay
  script:
    - kubectl apply -f customer-authentication-namespace.yaml
    - sed -i "s|_SPRING_PROFILES_ACTIVE_|$SPRING_PROFILES_ACTIVE|g" customer-authentication-deployment.yaml
    - sed -i "s|_IMAGE_|$IMAGE|g" customer-authentication-deployment.yaml
    - >
      kubectl create secret docker-registry $REGISTRY \
        --namespace=$NAMESPACE \
        --dry-run=true \
        --docker-server=$CI_REGISTRY \
        --docker-username=$CI_DEPLOY_USER \
        --docker-password=$CI_DEPLOY_PASSWORD \
        --docker-email=$GITLAB_USER_EMAIL -o yaml | kubectl apply -f -
    - kubectl apply -f customer-authentication-deployment.yaml
    - kubectl apply -f customer-authentication-service.yaml
  only:
    - uat

prod_deploy:
  stage: deploy
  image: registry.gitlab.com/krealomine/deploy_k8s_azure_prod:latest
  environment:
    name: prod
  variables:
    SPRING_PROFILES_ACTIVE: cloud,prod
    REGISTRY: customer-authentication
    IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    NAMESPACE: tenpo-webpay
  script:
    - kubectl apply -f customer-authentication-namespace.yaml
    - sed -i "s|_SPRING_PROFILES_ACTIVE_|$SPRING_PROFILES_ACTIVE|g" customer-authentication-deployment.yaml
    - sed -i "s|_IMAGE_|$IMAGE|g" customer-authentication-deployment.yaml
    - >
      kubectl create secret docker-registry $REGISTRY \
        --namespace=$NAMESPACE \
        --dry-run=true \
        --docker-server=$CI_REGISTRY \
        --docker-username=$CI_DEPLOY_USER \
        --docker-password=$CI_DEPLOY_PASSWORD \
        --docker-email=$GITLAB_USER_EMAIL -o yaml | kubectl apply -f -
    - kubectl apply -f customer-authentication-deployment.yaml
    - kubectl apply -f customer-authentication-service.yaml
  only:
    - master
